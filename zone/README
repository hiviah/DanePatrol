Here are some generated CA certs, server certs and zone with TLSA records for
testing purposes. Certificates are to be used in a server like Apache or nginx
(don't forget to include the CA cert in the chain).

All passwords for the test keys are: 1234

To generate an additional certificate, use:

1. openssl-1.0.1c/misc/CA.pl -newreq
2. rename generated newkey.pem and newreq.pem to something like server3.csr and server3.key
3. openssl ca -config openssl.cnf -out server3.crt -infiles server3.csr

For generating the TLSA records, use https://github.com/pieterlexis/swede, e.g.:

./swede --insecure create --usage 0 --selector 1 --mtype 2 localhost

Add the generated TLSA records to tlsa-test file (that's the zone file for a
mock domain 'tlsa-test'). Resign zone with (you need 'bind' installed):

dnssec-signzone tlsa-test

The generated signed zone 'tlsa-test.signed' is then added to locally running
unbound/bind so that you can test the zone. See options 'local-zone' and
'local-data' in unbound.conf.


Using the zone in BIND on localhost:

1. Put the generated tlsa-test.signed in /var/named/ (or wherever the bind's
   configuration file points)
2. Add the generated zone to /etc/named.conf:

    listen-on port 53 { 127.0.0.1; };

    zone "tlsa-test" IN {
      type master;
      file "tlsa-test.signed";
      allow-update { none; };
    };

3. (Re)start bind
4. Set "nameserver 127.0.0.1" in /etc/resolv.conf (or setup NetworkManager, etc.)

There's also unbound_test.py that uses unbound's python binding which can be
used to test that the TLSA record in the signed zone resolves securely. The
"keys.tlsa-test" file is used as trust anchor list, it's preloaded with the
generated DS records.
